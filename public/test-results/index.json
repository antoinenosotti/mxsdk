{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2019-03-10T18:05:35.701Z",
    "end": "2019-03-10T18:05:36.461Z",
    "duration": 760,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "4d9f8db1-2003-480d-a1d7-0ea292ed93c1",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "a473b614-c748-45df-8a2e-23aa6cec9712",
        "title": "Commands",
        "fullFile": "/Users/geldhe/Documents/Mendix/Octo Testing Suite-main/mxsdk/src/test/system.ts",
        "file": "/src/test/system.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "List Revisions",
            "fullTitle": "Commands List Revisions",
            "timedOut": false,
            "duration": 740,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "__awaiter(this, void 0, void 0, function* () {\n        try {\n            const args = {\n                apiKey: \"49dd389b-5c1c-4151-b536-ecba46c73c96\",\n                appId: \"2055bb3f-8a67-4ad3-8765-3e31432bac4f\",\n                appName: \"Octo\",\n                branchName: \"\",\n                revision: 11,\n                load: false,\n                verbose: true,\n                username: \"herman.geldenhuys@bdc.cap\",\n                list: true,\n                fetch: undefined,\n                module: undefined,\n                entity: undefined,\n                prettyPrint: undefined,\n                json: undefined\n            };\n            const run = () => __awaiter(this, void 0, void 0, function* () {\n                const runtime = new runtimearguments_1.RuntimeArguments({ props: args });\n                runtime.time(`\\x1b[32mTook\\x1b[0m`);\n                runtime.about();\n                yield mxsdk_1.Main.run(runtime);\n            });\n            yield run();\n            chai_1.expect(\"I'm alive\").to.equal(\"I'm alive\");\n        }\n        catch (e) {\n            console.log(\"FAIL\");\n            chai_1.expect(\"I'm dead\").to.equal(\"I'm alive\");\n        }\n    })",
            "err": {
              "message": "AssertionError: expected 'I\\'m dead' to equal 'I\\'m alive'",
              "estack": "AssertionError: expected 'I\\'m dead' to equal 'I\\'m alive'\n    at Object.<anonymous> (src/test/system.ts:39:35)\n    at Generator.throw (<anonymous>)\n    at rejected (src/test/system.ts:5:65)\n    at process.internalTickCallback (internal/process/next_tick.js:77:7)",
              "diff": "- I'm dead\n+ I'm alive\n"
            },
            "isRoot": false,
            "uuid": "bbfcec15-1569-48c1-9f8b-3c57a13d8592",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [
          "bbfcec15-1569-48c1-9f8b-3c57a13d8592"
        ],
        "pending": [],
        "skipped": [],
        "duration": 740,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}